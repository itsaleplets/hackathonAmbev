{"version":3,"sources":["Context/beerContext.js","Services/Helper.js","Context/beerProvider.js","Components/Chart.js","images/Alcool.svg","Components/Measurement.js","images/BeerCheckLogoNegativa.svg","Components/Header.js","Components/UpdateSensor.js","images/BeerCheckLogo.svg","images/wave.svg","images/wave2.svg","Components/Splashscreen.js","Components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["beerContext","createContext","dataMock","title","values","parseFloat","Math","random","toFixed","BeerProvider","children","useState","data","setData","splashScreen","setsplashScreen","apiResult","setApiResult","xAxisData","yAxisData","contextValue","getData","chartData","type","labels","datasets","label","backgroundColor","borderColor","borderWidth","borderJoinStyle","fetch","a","showSplashScreen","Provider","value","Chart","props","useContext","useEffect","className","options","display","text","fontSize","fontColor","legend","scales","yAxes","position","ticks","beginAtZero","xAxes","Measurement","alcohol","console","log","map","element","status","getStatus","details","getDetails","style","opacity","alt","src","alcool","color","measure","Header","logo","UpdateSensor","date","setDate","onClick","today","Date","time","getHours","getMinutes","getDate","getMonth","getFullYear","handleClick","id","SplashScreen","wave1","wave2","Dashboard","setTimeout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5f2a083.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst beerContext = createContext();\n\nexport default beerContext;\n","export const dataMock = [\n  {\n    title: 'Teor Alcoólico',\n  },\n  {\n    title: 'Oxigênio'\n  },\n  {\n    title: 'Gás Carbônico',\n  },\n  {\n    title: 'Amargor',\n  },\n];\n\nexport const values = () => {\n  let min = 0;\n  let max = 5.5;\n  return parseFloat(Math.random() * (max - min)).toFixed(1); \n}\n","import React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport beerContext from './beerContext';\nimport { values } from '../Services/Helper';\n\nfunction BeerProvider({ children }) {\n  const [data, setData] = useState([]);\n  const [splashScreen, setsplashScreen] = useState(true);\n  const [apiResult, setApiResult] = useState('');\n  const xAxisData = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]\n  const yAxisData = [1, 2, 1, 2.5, 1, 2]\n  \n  const fetch = async () => {\n    // const getFetch = await getAPI();\n    setApiResult(values);\n  };\n\n  const showSplashScreen = () => {\n    setsplashScreen(false);\n  }\n\n  const getData = () => {\n    setData({\n      chartData: {\n        type: 'line',\n        labels: xAxisData,\n        datasets: [\n          {\n            label: 'Level',\n            data: yAxisData,\n            backgroundColor:'rgba(0, 0, 0, 0)',\n            borderColor: ['#305AE0'],\n            borderWidth: [1],\n            borderJoinStyle: ['round']\n          }\n        ],\n      }\n    });\n  };\n\n  const contextValue = {\n    data,\n    getData,\n    splashScreen,\n    fetch,\n    showSplashScreen,\n    apiResult\n  };\n\n  return (\n    <beerContext.Provider value={ contextValue }>\n      { children }\n    </beerContext.Provider>\n  );\n}\n\nBeerProvider.propTypes = {\n  children: propTypes.node.isRequired,\n};\n\nexport default BeerProvider;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport beerContext from '../Context/beerContext';\n\nfunction Chart(props) {\n  const { data, getData, fetch } = useContext(beerContext);\n  useEffect(() => {\n    getData();\n  }, []);\n  \n  return (\n    <div className=\"chart\">\n      <Line\n          data = { data.chartData }\n          options = {{\n            title: {\n              display: true,\n              text: `Histórico do ${props.title} | por hora`,\n              fontSize: 12,\n              fontColor: '#305AE0',\n            },\n            legend: {\n              display: false,\n            },\n            scales: {\n              yAxes: [{\n                display: true,\n                position: 'right',\n                fontSize: 1,\n                ticks: {\n                  beginAtZero: true,\n                  fontSize: 4\n                }\n              }],\n              xAxes: [{\n                ticks: {\n                  fontSize: 8\n                }\n              }]\n            }\n          }}\n        />\n    </div>\n  );\n}\n\nexport default Chart;\n","export default __webpack_public_path__ + \"static/media/Alcool.30aa7f9f.svg\";","import React, { useContext, useState } from 'react';\nimport '../Css/App.css'\nimport Chart from './Chart';\nimport { dataMock } from '../Services/Helper';\nimport beerContext from '../Context/beerContext';\nimport alcool from '../images/Alcool.svg'\n\nfunction Measurement() {\n  const [values, setValues] = useState(5);\n  const { apiResult } = useContext(beerContext);\n  const alcohol = 'Teor Alcoólico';\n\n  const getStatus = (title) => {\n    if(title === alcohol && apiResult < 5 && apiResult >= 4) {\n      return ['#FECA5B', 'Alerta', 'Valor abaixo do ideal', '100%', '#FFFFFF'];\n    } else if(title === alcohol && apiResult < 4) {\n      return ['#ED4A71', 'Crítico', 'Valor abaixo do ideal', '100%', '#FFFFFF'];\n    } else if( title !== alcohol) {\n      return ['#FFFFFF', ' Sensor Inativo', '', '30%', '#13245A'];\n    }\n    return ['#19CC97', 'Estável', 'Valor dentro do permitido', '100%', '#FFFFFF'];\n  }\n\n  const getDetails = (type) => {\n    switch(type) {\n      case 'Teor Alcoólico':\n        return ['/Alcool.svg', '5%'];\n      case 'Oxigênio':\n        return ['/CO2.svg', '10ppm'];\n      case 'Gás Carbônico':\n        return ['/O2.svg', '4.5%'];\n      case 'Amargor':\n        return ['/IBU.svg', '15'];\n      default:\n        return '';\n    }\n  }\n\n  //Código para ser usado com implementação de banco de dados\n  // const updateValue = () => {\n  //   if(apiResult) {\n  //     return apiResult.percent;\n  //   }\n  // }\n  // setTimeout(() => {\n  //   const result = updateValue ();\n  //   if(!result) {\n  //     setValues(5);\n  //   } else {\n  //     setValues(result);\n  //   }\n  // }, 4000);\n\n  return (\n    <div>\n      {console.log(apiResult)}\n      {dataMock.map((element) => {\n        const { title } = element;\n        const status = getStatus(title);\n        const details = getDetails(title);\n        return (\n          <div key={ title } className=\"measurement-card\" style={ {opacity: status[3]} }>\n            <div className=\"info-div\">\n              <img className=\"icon\" alt={ title } src={alcool}/>\n              <h3>{ title }</h3>\n              <span>Valor ideal {details[1]}</span>\n              <div className=\"rating\" style={ { backgroundColor: status[0], color: status[4]} }>\n                { title === alcohol ? <h1>{apiResult}%</h1>  : ''}\n                <h4>{ status[1] }</h4>\n                <span className=\"percent\">{status[2]}</span>\n              </div>\n            </div>\n            {title === alcohol ? <Chart title={title} measure={values} /> : ''}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Measurement;\n","export default __webpack_public_path__ + \"static/media/BeerCheckLogoNegativa.fd91eb5a.svg\";","import React from 'react';\nimport '../Css/App.css'\nimport logo from '../images/BeerCheckLogoNegativa.svg';\n\nfunction Header() {\n\n  return (\n    <div className=\"header\">\n      <img className=\"logo\" alt=\"logo\" src={logo} />\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { useContext, useState } from 'react';\nimport beerContext from '../Context/beerContext';\nimport '../Css/App.css'\n\nfunction UpdateSensor() {\n  const { apiResult, fetch } = useContext(beerContext);\n  const [date, setDate] = useState('');\n  const handleClick = () => {\n    fetch();\n    const today = new Date();\n    const time = `${today.getHours()} : ${today.getMinutes()}`;\n    const date = `${today.getDate()}/${today.getMonth()}/${today.getFullYear()}`;\n    setDate(`${date} | às ${time}`)\n  }\n  \n    \n\n  return (\n    <div className=\"sensor\">\n        <div className=\"div-id\">\n          <h1 className=\"h1-title\">#ID Sensor</h1>\n          <span>Última atualização: {date}</span>\n        </div>\n        <div className=\"div-btn\">\n        <button onClick={ () => handleClick() } id=\"btn\" type=\"button\" className=\"btn btn-primary-outline\">ATUALIZAR SENSORES</button>\n        </div>\n    </div>\n  );\n}\n\nexport default UpdateSensor;\n","export default __webpack_public_path__ + \"static/media/BeerCheckLogo.fdb18e5d.svg\";","export default __webpack_public_path__ + \"static/media/wave.fd7f2889.svg\";","export default __webpack_public_path__ + \"static/media/wave2.8b00f1f9.svg\";","import React from 'react';\nimport '../Css/App.css'\nimport logo from '../images/BeerCheckLogo.svg';\nimport wave1 from '../images/wave.svg';\nimport wave2 from '../images/wave2.svg';\n\nfunction SplashScreen() {\n\n  return (\n    <div className=\"fade-in\">\n      <div className=\"splash-div\">\n        <img className=\"splash-logo\" alt=\"logo\" src={logo} />\n        <p className=\"splash-title1\">Uma boa cerveja</p>\n        <p className=\"splash-title2\">sempre na medida certa</p>\n      </div>\n      <img className=\"splash-wave1\" alt=\"yellow wave\" src={wave1} />\n      <img className=\"splash-wave2\" alt=\"yellow wave\" src={wave2} />\n    </div>\n  );\n  \n}\n\nexport default SplashScreen;\n","import React, { useContext } from 'react';\nimport '../Css/App.css'\nimport Measurement from './Measurement';\nimport Header from './Header';\nimport UpdateSensor from './UpdateSensor';\nimport beerContext from '../Context/beerContext';\nimport SplashScreen from './Splashscreen';\n\nfunction Dashboard() {\n   const { splashScreen, showSplashScreen } = useContext(beerContext);\n   setTimeout(() => {\n    showSplashScreen();\n  }, 4000);\n\n  return (\n    <div>\n      { splashScreen ? <SplashScreen /> :\n      <div>\n        <Header />\n        <UpdateSensor />\n        <Measurement />\n      </div>\n      }\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import './Css/App.css';\nimport React from 'react';\nimport BeerProvider from './Context/beerProvider';\nimport Dashboard from './Components/Dashboard';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n\n  return (\n    <BeerProvider>\n      <Dashboard />\n    </BeerProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}